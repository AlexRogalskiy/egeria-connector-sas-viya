apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'maven-publish'

// Only apply the signing plugin if we're running in the build environment
if (System.getenv("CI"))  {
    apply plugin: 'signing'
    // Artifacts need signing for maven central - supplied by GitHub secrets
    signing {
        sign publishing.publications.mavenJava
        def signingKey = System.getenv("OSSRH_GPG_PRIVATE_KEY")
        def signingPassword = System.getenv("OSSRH_GPG_PASSPHRASE")
        useInMemoryPgpKeys(signingKeyId, signingKey, signingPassword)
    }
}

// Required for maven publishing
group = 'org.odpi.egeria'
version = '0.1-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots"
    }
}

configurations {
    // configuration that holds jars to include in the jar
    // https://discuss.gradle.org/t/how-to-include-dependencies-in-jar/19571/8
    bundledLibs
    implementation.extendsFrom bundledLibs
}

dependencies {
    implementation 'org.odpi.egeria:open-connector-framework:2.+'
    implementation 'org.odpi.egeria:repository-services-connectors:2.+'
    implementation 'org.odpi.egeria:server-chassis-spring:2.+'

    bundledLibs 'org.slf4j:slf4j-api'
    bundledLibs 'org.apache.httpcomponents:httpclient:4.5.12'
    bundledLibs 'com.google.code.gson:gson:2.8.6'
    bundledLibs 'com.rabbitmq:amqp-client:5.9.0'

    testImplementation 'org.codehaus.groovy:groovy:2.5.14'
    testImplementation 'org.codehaus.groovy:groovy-dateutil:2.5.14'
    testImplementation 'org.spockframework:spock-core:1.3-groovy-2.5'
}

jar {
    from {
        configurations.bundledLibs.collect { it.isDirectory() ? it : zipTree(it) }
    }

    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

// Maven Central requires we distribute source and javadoc
java {
    withJavadocJar()
    withSourcesJar()
}
// We only have a single artifact for now - this additional metadata is
// required for publishing to maven central
publishing {
    publications {
        mavenJava(MavenPublication) {
            pom {
                name = Project.getName()
                description = 'SAS Viya Connector for Egeria'
                url = 'http://egeria.odpi.org'
                // No additional properties for now
                //properties = [
                //        propname: "propvalue"
                //]
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                    license {
                        name = 'Creative Commons Attribution 4.0 International (CC BY 4.0)'
                        url = 'https://creativecommons.org/licenses/by/4.0'
                    }
                }
                developers {
                    developer {
                        id = 'planetf1'
                        name = 'Nigel Jones'
                        email = 'nigel.l.jones+git@gmail.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/odpi/egeria-connector-sas-viya.git'
                    developerConnection = 'scm:git:ssh://github.com/odpi/egeria/egeria-connector-sas-viya.git'
                    url = 'http://github.com/odpi/egeria-connector-sas-viya/'
                }
                // Release versions get pushed to staging area on maven central, snapshots to snapshot repo
                repositories {
                    maven {
                        name = 'OSSRH'
                        def releasesRepoUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2'
                        def snapshotsRepoUrl = 'https://oss.sonatype.org/content/repositories/snapshots'
                        url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
                        credentials {
                            username = System.getenv("OSSRH_TOKEN")
                            password = System.getenv("OSSRH_USERNAME")
                        }
                    }
                }
            }
        }
    }
}

// Include specific java version notes
sourceCompatibility = 11
targetCompatibility = 11


// For later java versions this is recommended
javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}